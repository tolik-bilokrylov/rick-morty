{"version":3,"sources":["components/Navbar/Navbar.jsx","components/Characters/Character.jsx","components/Characters/Button.jsx","components/Characters/CharactersForm.jsx","api/api.js","components/Characters/CharactersList.jsx","pages/Characters.js","components/Episodes/EpisodesForm.jsx","components/Episodes/Button.jsx","components/Episodes/EpisodesList.jsx","pages/Episodes.js","components/Locations/LocationsForm.jsx","components/Locations/Button.jsx","components/Locations/LocationsList.jsx","pages/Locations.js","components/MyWatchList/Watch.jsx","components/MyWatchList/WatchForm.jsx","components/MyWatchList/WatchList.jsx","pages/MyWatchList.js","App.js","index.js"],"names":["Navbar","useState","click","setClick","navbar","setNavbar","closeMobileMenu","window","addEventListener","scrollY","className","to","onClick","class","Character","id","name","img","status","species","type","gender","src","alt","style","color","Button","page","setPage","prev","pages","disabled","CharacterForm","setStatusGender","setStatusSpecies","setStatusStatus","onChange","event","console","log","target","value","URL","urlCharacters","urlEpisodes","urlLocations","CharactersList","characters","setCharacters","info","setInfo","statusGender","statusSpecies","statusStatus","pageCharacters","useEffect","axios","get","then","response","result","data","results","filterCharacters","useMemo","filter","character","undefined","map","image","Characters","EpisodesForm","EpisodessList","episodes","setEpisodes","pageEpisodes","headers","Table","striped","bordered","hover","variant","title","textTransform","episode","key","Episodes","EpisodesList","LocationsForm","LocationsList","locations","setLocations","pageLocations","location","Locations","Watch","todos","completeTodo","removeTodo","todo","index","isComplete","text","WatchForm","props","edit","input","setInput","inputRef","useRef","current","focus","handleSubmit","preventDefault","onSubmit","Math","floor","random","placeholder","ref","WatchList","setTodos","localStorage","getItem","setItem","JSON","stringify","todoLocal","parse","getLocalTodos","test","newTodos","updateTodos","removeArr","MyWatchList","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6258182a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navbar.css';\n\nfunction Navbar() {\n  const [click, setClick] = useState(false);\n  const [navbar, setNavbar] = useState(false);\n\n  const handleClick = () => setClick(!click);\n  const closeMobileMenu = () => setClick(false);\n\n  const changeBackground = () => {\n    if (window.scrollY >= 80) {\n      setNavbar(true);\n    } else {\n      setNavbar(false);\n    }\n  }\n\n  window.addEventListener('scroll', changeBackground);\n\n  return (\n    <>\n      <nav className={navbar ? 'navbar active' : 'navbar'}>\n        <div className='navbar-container'>\n          <Link to='/' className='navbar-logo' onClick={closeMobileMenu}>\n            Rick and Morty\n            <i class=\"fas fa-globe-europe\"/>\n          </Link>\n          <div className='menu-icon' onClick={handleClick}>\n            <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\n          </div>\n          <ul className={click ? 'nav-menu active' : 'nav-menu'}>\n            <li className='nav-item'>\n              <Link\n                to='/characters'\n                className='nav-links'\n                onClick={closeMobileMenu}\n              >\n                Characters\n              </Link>\n            </li>\n            <li className='nav-item'>\n              <Link\n                to='/episodes'\n                className='nav-links'\n                onClick={closeMobileMenu}\n              >\n                Episodes\n              </Link>\n            </li>\n            <li className='nav-item'>\n              <Link\n                to='/locations'\n                className='nav-links'\n                onClick={closeMobileMenu}\n              >\n                Locations\n              </Link>\n            </li>\n            <li className='nav-item'>\n              <Link\n                to='/myWatchList'\n                className='nav-links'\n                onClick={closeMobileMenu}\n              >\n                My watch list\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </>\n  );\n}\n\nexport default Navbar;","import React from 'react';\n\nfunction Character({ id, name, status, species, type, gender, img }) {\n  return (\n    <div\n      className=\"card\"\n      key={id}\n    >\n      <img\n        className=\"image\"\n        src={img}\n        alt=\"character\"\n      />\n      <h1\n        className=\"title\"\n        style={{color: 'black'}}\n      >\n        {name}\n      </h1>\n    </div>\n  )\n}\n\nexport default Character;\n","import React from 'react';\n\nfunction Button({ page, setPage, prev, pages }) {\n  return (\n    <div className=\"button-container\">\n      <button\n        className=\"button\"\n        type=\"button\"\n        disabled={prev === null}\n        onClick={() => setPage(page - 1)}\n      >\n        previous\n      </button>\n      <button\n        className=\"button\"\n        type=\"button\"\n        disabled={page === pages}\n        onClick={() => setPage(page + 1)}\n      >\n        next\n      </button>\n    </div>\n  )\n}\n\nexport default Button;\n","import React from 'react';\n\nfunction CharacterForm({ setStatusGender, setStatusSpecies, setStatusStatus }) {\n  const statusByGender = (event) => {\n    console.log(event.target.value)\n    setStatusGender(event.target.value)\n  };\n  const statusBySpecies = (event) => {\n    console.log(event.target.value)\n    setStatusSpecies(event.target.value)\n  };\n  const statusByStatus = (event) => {\n    console.log(event.target.value)\n    setStatusStatus(event.target.value)\n  };\n\n  return (\n    <form className=\"form\">\n      <select\n        className=\"select\"\n        onChange={statusByGender}\n        name=\"characters\"\n      >\n        <option value=\"all\">All</option>\n        <option value=\"male\">Male</option>\n        <option value=\"female\">Female</option>\n        <option value=\"unknown\">unknown</option>\n      </select>\n      <select\n        className=\"select\"\n        onChange={statusBySpecies}\n        name=\"characters\"\n      >\n        <option value=\"all\">All</option>\n        <option value=\"human\">Human</option>\n        <option value=\"alien\">Alien</option>\n      </select>\n      <select\n        className=\"select\"\n        onChange={statusByStatus}\n        name=\"characters\"\n      >\n        <option value=\"all\">All</option>\n        <option value=\"dead\">Dead</option>\n        <option value=\"alive\">Aliev</option>\n        <option value=\"unknown\">unknown</option>\n      </select>\n    </form>\n  )\n}\n\nexport default CharacterForm;\n","const URL = 'https://rickandmortyapi.com/api';\n\nexport const urlCharacters = `${URL}/character`;\nexport const urlEpisodes = `${URL}/episode`;\nexport const urlLocations = `${URL}/location`;","import React, { useState, useEffect, useMemo } from 'react';\nimport axios from 'axios';\nimport Character from './Character';\nimport Button from './Button';\nimport CharacterForm from './CharactersForm';\n// import CharacterInfo from './CharacterInfo';\nimport './CharactersList.css';\n\nimport { urlCharacters } from '../../api/api';\n\nfunction CharactersList() {\n  const [characters, setCharacters] = useState([]);\n  const [info, setInfo] = useState({});\n  const [statusGender, setStatusGender] = useState(\"all\")\n  const [statusSpecies, setStatusSpecies] = useState(\"all\")\n  const [statusStatus, setStatusStatus] = useState(\"all\")\n  const [page, setPage] = useState(1);\n\n  let pageCharacters = `${urlCharacters}/?page=${page}`;\n  \n  useEffect(() => {\n    axios.get(pageCharacters)\n      .then((response) => {\n        const result = (response.data);\n        setCharacters(result.results);\n        setInfo(result.info);\n      })\n  }, [pageCharacters]);\n\n  const filterCharacters = useMemo(() => {\n    let result = characters;\n\n    if (statusGender === \"all\") {\n      result = result.filter(character => character.gender !== undefined);\n    }\n\n    if (statusGender === \"male\") {\n      result = result.filter(character => character.gender === \"Male\");\n    }\n\n    if (statusGender === \"female\") {\n      result = result.filter(character => character.gender === \"Female\");\n    }\n\n    if (statusGender === \"unknown\") {\n      result = result.filter(character => character.gender === \"unknown\");\n    }\n\n    if (statusSpecies === \"all\") {\n      result = result.filter(character => character.species !== undefined);\n    }\n\n    if (statusSpecies === \"human\") {\n      result = result.filter(character => character.species === \"Human\");\n    }\n\n    if (statusSpecies === \"alien\") {\n      result = result.filter(character => character.species === \"Alien\");\n    }\n\n    if (statusStatus === \"all\") {\n      result = result.filter(character => character.status !== undefined);\n    }\n\n    if (statusStatus === \"dead\") {\n      result = result.filter(character => character.status === \"Dead\");\n    }\n\n    if (statusStatus === \"alive\") {\n      result = result.filter(character => character.status === \"Alive\");\n    }\n    \n    if (statusStatus === \"unknown\") {\n      result = result.filter(character => character.status === \"unknown\");\n    }\n\n    return result;\n  }, [characters, statusGender, statusSpecies, statusStatus]);\n  \n  return (\n    <div className=\"field\">\n      <Button\n        page={page}\n        setPage={setPage}\n        pages={info.pages}\n        prev={info.prev}\n      />\n      <CharacterForm\n        setStatusGender={setStatusGender}\n        setStatusSpecies={setStatusSpecies}\n        setStatusStatus={setStatusStatus}\n      />\n      <div\n        className=\"container\"\n      >\n        {filterCharacters.map(character => (\n          <Character\n            key={character.id}\n            status={character.status}\n            species={character.species}\n            type={character.type}\n            gender={character.gender}\n            name={character.name}\n            img={character.image}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default CharactersList;","import React from 'react';\nimport CharactersList from '../components/Characters/CharactersList';\n\nexport default function Characters() {\n  return (\n    <>\n      <CharactersList />\n    </>\n  )\n}\n","import React from 'react';\n\nfunction EpisodesForm() {\n  // const statusByStatus = (event) => {\n  //   console.log(event.target.value)\n  //   setStatusStatus(event.target.value)\n  // };\n\n  return (\n    <form>\n      \n    </form>\n  )\n}\n\nexport default EpisodesForm;","import React from 'react';\n\nfunction Button({ page, setPage, prev, pages }) {\n  return (\n    <div className=\"button-container\">\n      <button\n        className=\"button\"\n        type=\"button\"\n        disabled={prev === null}\n        onClick={() => setPage(page - 1)}\n      >\n        previous\n      </button>\n      <button\n        className=\"button\"\n        type=\"button\"\n        disabled={page === pages}\n        onClick={() => setPage(page + 1)}\n      >\n        next\n      </button>\n    </div>\n  )\n}\n\nexport default Button;\n","import React, { useState, useEffect} from 'react';\nimport axios from 'axios';\nimport EpisodesForm from './EpisodesForm';\nimport Button from './Button';\n// import CharacterInfo from './CharacterInfo';\nimport { Table } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { urlEpisodes } from '../../api/api';\n\nfunction EpisodessList() {\n  const [episodes, setEpisodes] = useState([]);\n  const [info, setInfo] = useState({});\n  const [page, setPage] = useState(1);\n\n  let pageEpisodes = `${urlEpisodes}/?page=${page}`;\n  \n  useEffect(() => {\n    axios.get(pageEpisodes)\n      .then((response) => {\n        const result = (response.data);\n        setEpisodes(result.results);\n        setInfo(result.info)\n      })\n  }, [pageEpisodes]);\n\n  const headers = [\"name\", \"air_date\", \"episode\", \"created\"]\n  \n  return (\n    <>\n      <Button\n        page={page}\n        setPage={setPage}\n        prev={info.prev}\n        pages={info.pages}\n      />\n      <EpisodesForm\n        \n      />\n      <Table striped bordered hover variant=\"dark\">\n        <thead>\n          <tr>\n            {headers.map(title => (\n              <th style={{textTransform: 'capitalize'}}>\n                {title}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {episodes.map(episode => (\n            <tr>\n              {headers.map(key => (\n                <td>{episode[key]}</td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </>\n  );\n};\n\nexport default EpisodessList;","import React from 'react';\nimport EpisodesList from '../components/Episodes/EpisodesList';\n\nexport default function Episodes() {\n  return (\n    <>\n      <EpisodesList />\n    </>\n  )\n}","import React from 'react';\n\nfunction LocationsForm() {\n  // const statusByGender = (event) => {\n  //   console.log(event.target.value)\n  //   setStatusGender(event.target.value)\n  // };\n  // const statusBySpecies = (event) => {\n  //   console.log(event.target.value)\n  //   setStatusSpecies(event.target.value)\n  // };\n  // const statusByStatus = (event) => {\n  //   console.log(event.target.value)\n  //   setStatusStatus(event.target.value)\n  // };\n\n  return (\n    <form>\n      {/* <select\n        className=\"select\"\n        onChange={statusByGender}\n        name=\"characters\"\n      >\n        <option value=\"all\">All</option>\n        <option value=\"male\">Male</option>\n        <option value=\"female\">Female</option>\n        <option value=\"unknown\">unknown</option>\n      </select>\n      <select\n        className=\"select\"\n        onChange={statusBySpecies}\n        name=\"characters\"\n      >\n        <option value=\"all\">All</option>\n        <option value=\"human\">Human</option>\n        <option value=\"alien\">Alien</option>\n      </select>\n      <select\n        className=\"select\"\n        onChange={statusByStatus}\n        name=\"characters\"\n      >\n        <option value=\"all\">All</option>\n        <option value=\"dead\">Dead</option>\n        <option value=\"alive\">Aliev</option>\n        <option value=\"unknown\">unknown</option>\n      </select> */}\n      </form>\n  )\n}\n\nexport default LocationsForm;","import React from 'react';\n\nfunction Button({ page, setPage, prev, pages }) {\n  return (\n    <div className=\"button-container\">\n      <button\n        className=\"button\"\n        type=\"button\"\n        disabled={prev === null}\n        onClick={() => setPage(page - 1)}\n      >\n        previous\n      </button>\n      <button\n        className=\"button\"\n        type=\"button\"\n        disabled={page === pages}\n        onClick={() => setPage(page + 1)}\n      >\n        next\n      </button>\n    </div>\n  )\n}\n\nexport default Button;\n","import React, { useState, useEffect, useMemo } from 'react';\nimport axios from 'axios';\nimport LocationsForm from './LocationsForm';\nimport Button from './Button';\n\nimport { Table } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './LocationList.css';\n\nimport { urlLocations } from '../../api/api';\n\nfunction LocationsList() {\n  const [locations, setLocations] = useState([]);\n  const [info, setInfo] = useState({});\n  // const [statusGender, setStatusGender] = useState(\"all\")\n  // const [statusSpecies, setStatusSpecies] = useState(\"all\")\n  // const [statusStatus, setStatusStatus] = useState(\"all\")\n  const [page, setPage] = useState(1);\n\n  let pageLocations = `${urlLocations}/?page=${page}`;\n  \n  useEffect(() => {\n    axios.get(pageLocations)\n      .then((response) => {\n        const result = (response.data);\n        setLocations(result.results);\n        setInfo(result.info)\n      })\n  }, [pageLocations]);\n\n  // const filterCharacters = useMemo(() => {\n  //   let result = characters;\n\n  //   if (statusGender === \"all\") {\n  //     result = result.filter(character => character.gender !== undefined);\n  //   }\n\n  //   if (statusGender === \"male\") {\n  //     result = result.filter(character => character.gender === \"Male\");\n  //   }\n\n  //   if (statusGender === \"female\") {\n  //     result = result.filter(character => character.gender === \"Female\");\n  //   }\n\n  //   if (statusGender === \"unknown\") {\n  //     result = result.filter(character => character.gender === \"unknown\");\n  //   }\n\n  //   if (statusSpecies === \"all\") {\n  //     result = result.filter(character => character.species !== undefined);\n  //   }\n\n  //   if (statusSpecies === \"human\") {\n  //     result = result.filter(character => character.species === \"Human\");\n  //   }\n\n  //   if (statusSpecies === \"alien\") {\n  //     result = result.filter(character => character.species === \"Alien\");\n  //   }\n\n  //   if (statusStatus === \"all\") {\n  //     result = result.filter(character => character.status !== undefined);\n  //   }\n\n  //   if (statusStatus === \"dead\") {\n  //     result = result.filter(character => character.status === \"Dead\");\n  //   }\n\n  //   if (statusStatus === \"alive\") {\n  //     result = result.filter(character => character.status === \"Alive\");\n  //   }\n    \n  //   if (statusStatus === \"unknown\") {\n  //     result = result.filter(character => character.status === \"unknown\");\n  //   }\n\n  //   return result;\n  // }, [characters, statusGender, statusSpecies, statusStatus]);\n\n  const headers = [\"name\", \"type\", \"dimension\", \"created\"]\n  \n  return (\n    <>\n      <Button\n        page={page}\n        setPage={setPage}\n        prev={info.prev}\n        pages={info.pages}\n      />\n      <LocationsForm\n        // setStatusGender={setStatusGender}\n        // setStatusSpecies={setStatusSpecies}\n        // setStatusStatus={setStatusStatus}\n        \n      />\n      <Table striped bordered hover variant=\"dark\">\n        <thead>\n          <tr>\n            {headers.map(title => (\n              <th style={{textTransform: 'capitalize'}}>\n                {title}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {locations.map(location => (\n            <tr>\n              {headers.map(key => (\n                <td>{location[key]}</td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </>\n  );\n};\n\nexport default LocationsList;","import React from 'react';\nimport LocationsList from '../components/Locations/LocationsList';\n\nexport default function Locations() {\n  return (\n    <>\n      <LocationsList />\n    </>\n  )\n}","import React from 'react';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { FaCheck } from 'react-icons/fa';\n\nconst Watch = ({ todos, completeTodo, removeTodo }) => {\n\n  return todos.map((todo, index) => (\n    <div\n      className={todo.isComplete\n        ? 'todo-row complete'\n        : 'todo-row'}\n      key={index}\n    >\n      <div key={todo.id}>\n        {todo.text}\n      </div>\n      <div className='icons'>\n        <FaCheck\n          key={todo.id}\n          onClick={() => completeTodo(todo.id)}\n          className='icon-style'\n        />\n        <RiCloseCircleLine\n          onClick={() => removeTodo(todo.id)}\n          className='icon-style'\n        />\n      </div>\n    </div>\n  ));\n};\n\nexport default Watch;","import React, { useState, useEffect, useRef } from 'react';\n\nfunction WatchForm(props) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = (event) => {\n    setInput(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className='todo-form'>\n      <>\n        <input\n          placeholder='Add a todo'\n          value={input}\n          onChange={handleChange}\n          name='text'\n          className='todo-input'\n          ref={inputRef}\n        />\n        <button onClick={handleSubmit} className='todo-button'>\n          Add episode\n        </button>\n      </>\n    </form>\n  );\n}\n\nexport default WatchForm;","import React, { useState, useEffect } from 'react';\nimport Watch from './Watch';\nimport WatchForm from './WatchForm';\n\nimport './MyWatch.css';\n\nfunction WatchList() {\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = (todo) => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    };\n\n    const newTodos = [todo, ...todos];\n\n    setTodos(newTodos);\n  };\n\n  const removeTodo = (id) => {\n    const removeArr = [...todos].filter(todo => todo.id !== id);\n\n    setTodos(removeArr);\n  };\n\n  const completeTodo = (id) => {\n    let updateTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      \n      return todo;\n    });\n    setTodos(updateTodos);\n  };\n\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todoLocal);\n    }\n  };\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  useEffect(() => {\n    saveLocalTodos();\n  });\n  \n  return (\n    <div className=\"todo-app\">\n      <h1 className=\"title\">\n        I want to watch later\n      </h1>\n      <WatchForm\n        onSubmit={addTodo}\n      />\n      <Watch\n        todos={todos}\n        completeTodo={completeTodo}\n        removeTodo={removeTodo}\n      />\n    </div>\n  )\n}\n\nexport default WatchList;","import React from 'react';\nimport WatchList from '../components/MyWatchList/WatchList';\n\nexport default function MyWatchList() {\n  return (\n    <>\n      <WatchList />\n    </>\n  )\n}","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/Navbar/Navbar';\nimport Characters from './pages/Characters';\nimport Episodes from './pages/Episodes';\nimport Locations from './pages/Locations';\nimport MyWatchList from './pages/MyWatchList';\nimport './App.css';\n\nfunction App() {\n  \n  return (\n    <>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route path='/characters' component={Characters} />\n          <Route path='/episodes' component={Episodes} />\n          <Route path='/locations' component={Locations} />\n          <Route path='/myWatchList' component={MyWatchList} />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render( <App />, document.getElementById('root'));\n"],"sourceRoot":""}